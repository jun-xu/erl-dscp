%% Author: sunshine
%% Created: 2013-11-20
%% Description: TODO: Add description to hurricane
-module(dscp_app).

-behaviour(application).
%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------

-include("log.hrl").
-include("dscp.hrl").

%% --------------------------------------------------------------------
%% Behavioural exports
%% --------------------------------------------------------------------
-export([
	 start/2,
	 stop/1
        ]).

%% --------------------------------------------------------------------
%% Internal exports
%% --------------------------------------------------------------------
-export([]).

%% --------------------------------------------------------------------
%% Macros
%% --------------------------------------------------------------------
-define(MASTER_MOD,master).
-define(SNODE_MOD,snode).
-define(ALL_MOD,all).
%% --------------------------------------------------------------------
%% Records
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% API Functions
%% --------------------------------------------------------------------


%% ====================================================================!
%% External functions
%% ====================================================================!
%% --------------------------------------------------------------------
%% Func: start/2
%% Returns: {ok, Pid}        |
%%          {ok, Pid, State} |
%%          {error, Reason}
%% --------------------------------------------------------------------
start(_Type, _StartArgs) ->
	case application:get_env(?APP_NAME, start_mod) of
		{ok,?MASTER_MOD} ->
			?INFO("~p -- start [~p] node...~n",[?MODULE,?MASTER_MOD]),
			hurr_master_sup:start_link();
		{ok,?SNODE_MOD} ->
			?INFO("~p -- start [~p] node...~n",[?MODULE,?SNODE_MOD]),
			hurr_master_sup:start_link();
		_ ->
			?ERROR("~p -- start app failed by reason:~p~n",[?MODULE,undefined_start_mod]),
			{error, not_found_start_mod}
	end.
%% --------------------------------------------------------------------
%% Func: stop/1
%% Returns: any
%% --------------------------------------------------------------------
stop(_State) ->
	?INFO("~p -- stop.",[?MODULE]),
    ok.

%% ====================================================================
%% Internal functions
%% ====================================================================

